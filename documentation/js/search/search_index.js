var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.239,1,1.449]],["body/modules/AppModule.html",[0,2.007,1,2.652,2,1.373,3,1.373,4,1.897,5,1.897,6,1.373,7,2.485,8,1.897,9,2.287,10,2.287,11,2.268,12,0.059,13,2.485,14,1.897,15,1.897,16,0.624,17,0.519,18,0.519,19,2.879,20,2.996,21,1.192,22,1.373,23,2.879,24,3.771,25,2.879,26,2.879,27,2.287,28,2.287,29,1.897,30,2.879,31,2.879,32,2.879,33,2.879,34,2.104,35,2.879,36,1.897,37,0.624,38,0.033,39,0.033,40,0.043,41,0.033]],["title/classes/BaseModel.html",[38,0.029,42,1.239]],["body/classes/BaseModel.html",[12,0.059,16,0.543,17,0.451,18,0.451,21,0.883,34,2.187,37,0.543,38,0.028,39,0.028,40,0.039,41,0.028,42,1.638,43,0.882,44,1.988,45,0.543,46,1.638,47,2.305,48,3.114,49,2.013,50,3.114,51,3.114,52,3.434,53,3.511,54,3.92,55,1.008,56,1.381,57,1.87,58,3.715,59,1.557,60,2.503,61,3.351,62,2.503,63,2.503,64,2.503,65,2.503,66,2.503,67,2.503,68,2.503,69,1.396,70,1.65,71,1.988,72,2.728,73,2.263,74,2.503,75,2.503,76,2.503,77,2.503,78,2.503,79,2.503]],["title/classes/BaseService.html",[38,0.029,80,1.711]],["body/classes/BaseService.html",[12,0.06,16,0.186,17,0.155,18,0.155,21,0.741,22,0.409,34,0.478,37,0.186,38,0.01,39,0.01,40,0.017,41,0.01,42,0.409,43,0.302,45,0.186,46,0.707,49,2.008,55,1.119,56,1.483,59,1.501,69,0.478,70,0.565,71,0.681,72,1.555,73,2.696,80,0.977,81,0.565,82,4.963,83,2.634,84,0.977,85,1.482,86,3.548,87,1.482,88,1.482,89,1.482,90,1.482,91,1.482,92,1.482,93,1.482,94,1.482,95,1.482,96,1.482,97,1.482,98,1.482,99,1.482,100,1.482,101,1.482,102,1.958,103,1.482,104,0.857,105,1.482,106,2.883,107,1.482,108,2.774,109,1.483,110,1.482,111,4.092,112,0.857,113,3.269,114,3.269,115,3.269,116,2.737,117,1.958,118,1.482,119,0.857,120,3.25,121,1.482,122,2.092,123,0.857,124,3.269,125,1.482,126,3.422,127,0.857,128,0.857,129,0.857,130,1.482,131,0.857,132,2.917,133,1.482,134,0.857,135,1.482,136,0.857,137,1.608,138,1.482,139,0.857,140,1.482,141,0.857,142,1.555,143,1.482,144,0.857,145,1.482,146,0.857,147,1.482,148,0.857,149,1.482,150,0.857,151,1.482,152,0.857,153,1.482,154,0.857,155,1.482,156,0.857,157,1.482,158,2.332,159,0.857,160,0.857,161,1.482,162,0.857,163,1.555,164,1.555,165,0.857,166,0.857,167,0.857,168,0.857,169,0.857,170,0.857,171,1.555,172,0.857,173,0.857,174,0.857,175,0.857,176,3.269,177,3.269,178,0.857,179,3.269,180,3.269,181,3.269,182,0.857,183,0.857,184,0.857,185,0.857,186,0.857,187,0.857,188,0.857,189,0.857,190,0.857,191,0.857,192,0.857,193,0.857,194,0.857,195,0.857]],["title/classes/CreateTeamDto.html",[38,0.029,196,1.239]],["body/classes/CreateTeamDto.html",[12,0.058,16,0.615,17,0.511,18,0.511,21,0.96,37,0.615,38,0.042,39,0.032,40,0.042,41,0.032,43,0.999,45,0.615,46,1.781,47,2.364,55,1.074,56,1.668,57,1.992,59,1.471,109,1.471,196,1.781,197,3.525,198,1.868,199,2.751,200,2.751,201,3.317,202,2.835,203,2.835,204,2.835,205,3.525,206,1.868,207,3.525,208,1.353]],["title/interfaces/IRepository.html",[209,1.449,210,1.711]],["body/interfaces/IRepository.html",[12,0.057,16,0.59,17,0.491,18,0.491,37,0.59,39,0.031,40,0.041,41,0.031,45,0.59,49,1.952,55,1.052,56,1.732,59,1.603,84,2.395,108,2.696,109,1.441,116,2.998,122,3.945,137,2.282,209,1.518,210,2.395,211,2.722,212,2.162,213,2.877,214,3.634,215,4.366,216,3.634,217,3.634,218,2.722,219,3.634,220,2.722,221,2.722,222,3.634,223,2.722,224,3.634,225,2.722]],["title/classes/TeamDto.html",[38,0.029,226,1.449]],["body/classes/TeamDto.html",[12,0.058,16,0.586,17,0.487,18,0.487,21,0.93,37,0.586,38,0.041,39,0.031,40,0.041,41,0.031,43,0.952,45,0.586,46,1.725,47,2.403,55,1.12,56,1.708,57,2.077,59,1.534,109,1.436,137,2.274,199,2.686,200,2.686,201,3.458,205,3.605,206,1.781,207,3.605,208,1.289,226,2.018,227,2.146,228,2.702,229,2.702,230,2.702,231,2.702]],["title/classes/TeamModel.html",[38,0.029,232,1.449]],["body/classes/TeamModel.html",[12,0.059,16,0.51,17,0.424,18,0.424,21,0.846,34,2.499,37,0.51,38,0.027,39,0.027,40,0.037,41,0.027,42,2.137,43,0.829,45,0.51,46,1.57,47,2.397,48,2.614,49,1.96,50,2.614,51,2.614,55,1.152,56,1.62,57,2.137,58,3.653,59,1.578,61,2.614,69,1.313,109,1.337,199,2.5,200,2.5,232,1.836,233,1.87,234,2.614,235,3.794,236,2.353,237,2.353,238,2.353,239,3.794,240,2.353,241,2.353,242,2.353,243,2.353,244,3.794]],["title/controllers/TeamsController.html",[245,1.449,246,1.449]],["body/controllers/TeamsController.html",[12,0.059,16,0.325,17,0.27,18,0.27,21,0.975,22,0.714,36,0.986,37,0.325,38,0.017,39,0.017,40,0.027,41,0.017,45,0.325,47,2.216,49,1.568,55,1.182,56,1.488,57,1.704,59,1.258,73,2.992,84,1.549,86,3.69,108,2.166,109,1.158,116,2.354,120,3.432,137,2.115,196,1.568,208,0.714,213,1.549,226,2.212,245,0.835,246,1.311,247,1.189,248,1.497,249,2.305,250,2.901,251,3.287,252,2.35,253,2.35,254,1.497,255,1.497,256,4.827,257,2.35,258,2.35,259,1.497,260,1.497,261,1.497,262,2.35,263,2.901,264,3.791,265,1.497,266,1.497,267,2.35,268,1.497,269,1.497,270,1.497,271,1.497,272,2.35,273,1.497,274,1.497,275,1.834,276,1.497,277,2.35,278,1.497,279,2.35,280,1.497,281,1.497,282,2.35,283,1.311,284,1.189,285,1.497,286,1.867,287,1.497,288,2.35,289,3.287,290,3.572,291,1.497,292,1.497,293,1.497,294,1.497,295,1.497,296,1.497,297,3.261,298,1.497,299,1.497,300,1.497,301,1.497,302,1.497,303,1.497,304,1.497,305,1.497,306,1.497,307,1.497,308,1.497,309,1.497]],["title/modules/TeamsModule.html",[0,1.239,11,1.239]],["body/modules/TeamsModule.html",[0,1.996,2,1.358,3,1.358,4,1.875,5,1.875,6,1.358,7,2.756,8,1.875,11,2.261,12,0.059,13,2.467,14,1.875,15,1.875,16,0.617,17,0.513,18,0.513,20,2.261,21,1.187,22,1.358,28,2.261,29,1.875,36,2.467,37,0.617,38,0.032,39,0.032,40,0.042,41,0.032,53,2.261,109,1.003,232,1.588,246,2.333,249,2.261,283,2.644,284,2.261,310,2.261,311,2.261,312,2.846,313,2.846,314,2.846,315,2.846,316,2.846,317,2.846,318,2.846]],["title/classes/UpdateTeamDto.html",[38,0.029,275,1.449]],["body/classes/UpdateTeamDto.html",[12,0.058,16,0.781,17,0.649,18,0.649,21,1.116,37,0.781,38,0.041,39,0.041,40,0.049,41,0.041,43,1.268,196,1.717,198,2.371,208,1.717,213,2.371,234,2.859,275,2.421,286,2.859,319,2.859,320,3.598,321,3.598]],["title/coverage.html",[322,2.32]],["body/coverage.html",[6,1.4,12,0.058,18,0.529,38,0.054,39,0.033,40,0.043,41,0.033,42,1.4,44,2.332,55,0.755,80,1.934,81,1.934,171,2.332,196,1.4,197,2.332,198,2.517,209,1.637,210,1.934,212,2.332,226,1.637,227,2.332,232,1.637,233,2.332,245,1.637,246,1.637,247,2.332,275,1.637,283,1.637,319,2.332,322,1.934,323,2.935,324,2.935,325,2.935,326,5.033,327,3.819,328,2.332,329,2.935,330,3.819,331,3.819,332,2.935,333,2.935,334,2.935,335,2.935,336,2.332,337,2.935,338,2.935,339,2.935]],["title/dependencies.html",[3,1.487,340,2.18]],["body/dependencies.html",[3,1.507,12,0.059,22,1.507,27,2.509,29,2.081,38,0.045,39,0.036,40,0.045,41,0.036,69,1.762,70,2.081,206,2.081,208,1.507,341,4.396,342,3.158,343,3.158,344,4.003,345,3.158,346,4.003,347,3.158,348,3.158,349,3.158,350,3.158,351,3.158,352,3.158,353,3.158,354,3.158,355,3.158,356,3.158,357,3.158,358,3.158,359,3.158,360,3.158,361,3.158,362,3.158,363,3.158,364,3.158]],["title/miscellaneous/functions.html",[365,1.216,366,2.476]],["body/miscellaneous/functions.html",[6,2.3,12,0.052,39,0.044,40,0.052,41,0.044,45,0.846,328,3.097,365,2.175,366,3.097,367,3.898]],["title/index.html",[45,0.473,368,2.18,369,2.18]],["body/index.html",[12,0.058,17,0.484,39,0.03,40,0.041,41,0.03,297,2.131,322,1.768,370,2.682,371,2.682,372,3.599,373,2.682,374,2.682,375,2.682,376,2.682,377,2.682,378,2.682,379,2.682,380,2.682,381,2.682,382,4.062,383,2.682,384,2.682,385,2.682,386,2.682,387,4.761,388,2.682,389,2.682,390,2.682,391,4.661,392,2.682,393,2.682,394,3.599,395,2.682,396,2.682,397,2.682,398,2.682,399,3.599,400,3.599,401,2.682,402,2.682,403,2.682,404,3.599,405,3.599,406,2.682,407,2.682,408,2.682,409,2.682,410,2.682,411,2.131,412,2.682,413,2.682,414,2.682,415,2.682,416,2.682,417,2.682,418,2.682,419,2.682,420,2.682,421,2.682,422,2.682,423,2.682,424,2.682,425,2.682,426,2.682,427,2.682,428,2.682,429,2.682]],["title/modules.html",[2,1.68]],["body/modules.html",[1,2.141,2,1.831,11,1.831,12,0.051,39,0.044,40,0.051,41,0.044,411,3.583,430,4.51,431,4.51,432,4.51]],["title/overview.html",[433,2.797]],["body/overview.html",[0,1.594,1,2.631,2,1.594,3,1.594,4,2.202,5,2.202,6,1.594,7,2.202,8,2.202,9,2.654,10,2.654,11,2.314,12,0.053,13,2.733,14,2.202,15,2.202,39,0.038,40,0.047,41,0.038,43,1.177,209,1.864,245,1.864,283,2.516,310,2.654,311,2.654,336,2.654,433,2.654,434,3.341,435,4.51,436,3.341]],["title/miscellaneous/typealiases.html",[365,1.216,437,3.117]],["body/miscellaneous/typealiases.html",[12,0.055,39,0.042,40,0.05,41,0.042,45,0.808,55,0.958,81,2.454,132,3.519,142,3.519,163,3.519,164,3.519,365,2.077,438,3.724,439,4.43]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["0.11.1",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":435,"title":{},"body":{"overview.html":{}}}],["2",{"_index":434,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["5.9.7",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":436,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["7.1.14",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["_count",{"_index":85,"title":{},"body":{"classes/BaseService.html":{}}}],["_count(filter",{"_index":110,"title":{},"body":{"classes/BaseService.html":{}}}],["_countasync",{"_index":87,"title":{},"body":{"classes/BaseService.html":{}}}],["_countasync(filter",{"_index":118,"title":{},"body":{"classes/BaseService.html":{}}}],["_create",{"_index":88,"title":{},"body":{"classes/BaseService.html":{}}}],["_create(item",{"_index":121,"title":{},"body":{"classes/BaseService.html":{}}}],["_createmodel",{"_index":89,"title":{},"body":{"classes/BaseService.html":{}}}],["_createmodel(doc",{"_index":125,"title":{},"body":{"classes/BaseService.html":{}}}],["_delete",{"_index":90,"title":{},"body":{"classes/BaseService.html":{}}}],["_delete(filter",{"_index":130,"title":{},"body":{"classes/BaseService.html":{}}}],["_deleteasync",{"_index":91,"title":{},"body":{"classes/BaseService.html":{}}}],["_deleteasync(filter",{"_index":133,"title":{},"body":{"classes/BaseService.html":{}}}],["_deletebyid",{"_index":92,"title":{},"body":{"classes/BaseService.html":{}}}],["_deletebyid(id",{"_index":135,"title":{},"body":{"classes/BaseService.html":{}}}],["_deletebyidasync",{"_index":93,"title":{},"body":{"classes/BaseService.html":{}}}],["_deletebyidasync(id",{"_index":138,"title":{},"body":{"classes/BaseService.html":{}}}],["_findall",{"_index":94,"title":{},"body":{"classes/BaseService.html":{}}}],["_findall(filter",{"_index":140,"title":{},"body":{"classes/BaseService.html":{}}}],["_findallasync",{"_index":95,"title":{},"body":{"classes/BaseService.html":{}}}],["_findallasync(filter",{"_index":143,"title":{},"body":{"classes/BaseService.html":{}}}],["_findbyid",{"_index":96,"title":{},"body":{"classes/BaseService.html":{}}}],["_findbyid(id",{"_index":145,"title":{},"body":{"classes/BaseService.html":{}}}],["_findbyidasync",{"_index":97,"title":{},"body":{"classes/BaseService.html":{}}}],["_findbyidasync(id",{"_index":147,"title":{},"body":{"classes/BaseService.html":{}}}],["_findone",{"_index":98,"title":{},"body":{"classes/BaseService.html":{}}}],["_findone(filter",{"_index":149,"title":{},"body":{"classes/BaseService.html":{}}}],["_findoneasync",{"_index":99,"title":{},"body":{"classes/BaseService.html":{}}}],["_findoneasync(filter",{"_index":151,"title":{},"body":{"classes/BaseService.html":{}}}],["_id",{"_index":48,"title":{},"body":{"classes/BaseModel.html":{},"classes/TeamModel.html":{}}}],["_update",{"_index":100,"title":{},"body":{"classes/BaseService.html":{}}}],["_update(id",{"_index":153,"title":{},"body":{"classes/BaseService.html":{}}}],["_updateasync",{"_index":101,"title":{},"body":{"classes/BaseService.html":{}}}],["_updateasync(id",{"_index":155,"title":{},"body":{"classes/BaseService.html":{}}}],["abstract",{"_index":71,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{}}}],["accessors",{"_index":52,"title":{},"body":{"classes/BaseModel.html":{}}}],["aliases",{"_index":438,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":412,"title":{},"body":{"index.html":{}}}],["angular",{"_index":381,"title":{},"body":{"index.html":{}}}],["anyparamconstructor",{"_index":165,"title":{},"body":{"classes/BaseService.html":{}}}],["apicreatedresponse",{"_index":288,"title":{},"body":{"controllers/TeamsController.html":{}}}],["apinotfoundresponse",{"_index":289,"title":{},"body":{"controllers/TeamsController.html":{}}}],["apiokresponse",{"_index":290,"title":{},"body":{"controllers/TeamsController.html":{}}}],["apiproperty",{"_index":207,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{}}}],["apitags",{"_index":291,"title":{},"body":{"controllers/TeamsController.html":{}}}],["apitags('teams",{"_index":293,"title":{},"body":{"controllers/TeamsController.html":{}}}],["app",{"_index":389,"title":{},"body":{"index.html":{}}}],["applications",{"_index":378,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":86,"title":{},"body":{"classes/BaseService.html":{},"controllers/TeamsController.html":{}}}],["author",{"_index":422,"title":{},"body":{"index.html":{}}}],["await",{"_index":177,"title":{},"body":{"classes/BaseService.html":{}}}],["backers",{"_index":413,"title":{},"body":{"index.html":{}}}],["base.model",{"_index":162,"title":{},"body":{"classes/BaseService.html":{}}}],["basemodel",{"_index":42,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/TeamModel.html":{},"coverage.html":{}}}],["basemodel:12",{"_index":242,"title":{},"body":{"classes/TeamModel.html":{}}}],["basemodel:6",{"_index":240,"title":{},"body":{"classes/TeamModel.html":{}}}],["basemodel:9",{"_index":241,"title":{},"body":{"classes/TeamModel.html":{}}}],["baseservice",{"_index":80,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["baseservice.throwmongoerror(e",{"_index":181,"title":{},"body":{"classes/BaseService.html":{}}}],["body",{"_index":279,"title":{},"body":{"controllers/TeamsController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":432,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":430,"title":{},"body":{"modules.html":{}}}],["building",{"_index":373,"title":{},"body":{"index.html":{}}}],["buildschema",{"_index":68,"title":{},"body":{"classes/BaseModel.html":{}}}],["buildschema(this",{"_index":74,"title":{},"body":{"classes/BaseModel.html":{}}}],["catch",{"_index":179,"title":{},"body":{"classes/BaseService.html":{}}}],["class",{"_index":38,"title":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"classes/UpdateTeamDto.html":{}},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":43,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"classes/UpdateTeamDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_teamsmodule",{"_index":310,"title":{},"body":{"modules/TeamsModule.html":{},"overview.html":{}}}],["cluster_teamsmodule_providers",{"_index":311,"title":{},"body":{"modules/TeamsModule.html":{},"overview.html":{}}}],["collection",{"_index":318,"title":{},"body":{"modules/TeamsModule.html":{}}}],["config/configuration",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor",{"_index":104,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(model",{"_index":105,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(private",{"_index":295,"title":{},"body":{"controllers/TeamsController.html":{}}}],["controller",{"_index":245,"title":{"controllers/TeamsController.html":{}},"body":{"controllers/TeamsController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('teams",{"_index":294,"title":{},"body":{"controllers/TeamsController.html":{}}}],["controllers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{}}}],["country",{"_index":199,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{}}}],["coverage",{"_index":322,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":213,"title":{},"body":{"interfaces/IRepository.html":{},"controllers/TeamsController.html":{},"classes/UpdateTeamDto.html":{}}}],["create(@body",{"_index":302,"title":{},"body":{"controllers/TeamsController.html":{}}}],["create(team",{"_index":254,"title":{},"body":{"controllers/TeamsController.html":{}}}],["created",{"_index":257,"title":{},"body":{"controllers/TeamsController.html":{}}}],["createddate",{"_index":50,"title":{},"body":{"classes/BaseModel.html":{},"classes/TeamModel.html":{}}}],["createteamdto",{"_index":196,"title":{"classes/CreateTeamDto.html":{}},"body":{"classes/CreateTeamDto.html":{},"controllers/TeamsController.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["database",{"_index":267,"title":{},"body":{"controllers/TeamsController.html":{}}}],["date",{"_index":61,"title":{},"body":{"classes/BaseModel.html":{},"classes/TeamModel.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"overview.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{}}}],["default",{"_index":113,"title":{},"body":{"classes/BaseService.html":{}}}],["defined",{"_index":59,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{}}}],["delete",{"_index":250,"title":{},"body":{"controllers/TeamsController.html":{}}}],["delete(':id",{"_index":307,"title":{},"body":{"controllers/TeamsController.html":{}}}],["delete(':id')@apiokresponse({description",{"_index":261,"title":{},"body":{"controllers/TeamsController.html":{}}}],["delete(@param('id",{"_index":308,"title":{},"body":{"controllers/TeamsController.html":{}}}],["delete(id",{"_index":260,"title":{},"body":{"controllers/TeamsController.html":{}}}],["deletebyid",{"_index":214,"title":{},"body":{"interfaces/IRepository.html":{}}}],["deletebyid(id",{"_index":219,"title":{},"body":{"interfaces/IRepository.html":{}}}],["deleted",{"_index":262,"title":{},"body":{"controllers/TeamsController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":297,"title":{},"body":{"controllers/TeamsController.html":{},"index.html":{}}}],["development",{"_index":390,"title":{},"body":{"index.html":{}}}],["doc",{"_index":128,"title":{},"body":{"classes/BaseService.html":{}}}],["documentation",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["documentquery",{"_index":163,"title":{},"body":{"classes/BaseService.html":{},"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":164,"title":{},"body":{"classes/BaseService.html":{},"miscellaneous/typealiases.html":{}}}],["dto/create",{"_index":285,"title":{},"body":{"controllers/TeamsController.html":{}}}],["dto/team.dto",{"_index":287,"title":{},"body":{"controllers/TeamsController.html":{}}}],["dto/update",{"_index":292,"title":{},"body":{"controllers/TeamsController.html":{}}}],["e",{"_index":180,"title":{},"body":{"classes/BaseService.html":{}}}],["e2e",{"_index":401,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":374,"title":{},"body":{"index.html":{}}}],["err",{"_index":160,"title":{},"body":{"classes/BaseService.html":{}}}],["err.errmsg",{"_index":173,"title":{},"body":{"classes/BaseService.html":{}}}],["exist",{"_index":264,"title":{},"body":{"controllers/TeamsController.html":{}}}],["export",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"overview.html":{}}}],["express",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":234,"title":{},"body":{"classes/TeamModel.html":{},"classes/UpdateTeamDto.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["filter",{"_index":115,"title":{},"body":{"classes/BaseService.html":{}}}],["findall",{"_index":215,"title":{},"body":{"interfaces/IRepository.html":{}}}],["findbyid",{"_index":216,"title":{},"body":{"interfaces/IRepository.html":{}}}],["findbyid(id",{"_index":222,"title":{},"body":{"interfaces/IRepository.html":{}}}],["framework",{"_index":372,"title":{},"body":{"index.html":{}}}],["function",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":366,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":299,"title":{},"body":{"controllers/TeamsController.html":{}}}],["get(':id')@apiokresponse({description",{"_index":271,"title":{},"body":{"controllers/TeamsController.html":{}}}],["get()@apiokresponse({description",{"_index":266,"title":{},"body":{"controllers/TeamsController.html":{}}}],["getall",{"_index":251,"title":{},"body":{"controllers/TeamsController.html":{}}}],["getbyid",{"_index":252,"title":{},"body":{"controllers/TeamsController.html":{}}}],["getbyid(@param('id",{"_index":300,"title":{},"body":{"controllers/TeamsController.html":{}}}],["getbyid(id",{"_index":270,"title":{},"body":{"controllers/TeamsController.html":{}}}],["getmodelname",{"_index":66,"title":{},"body":{"classes/BaseModel.html":{}}}],["getschema",{"_index":64,"title":{},"body":{"classes/BaseModel.html":{}}}],["getters",{"_index":77,"title":{},"body":{"classes/BaseModel.html":{}}}],["getting",{"_index":368,"title":{"index.html":{}},"body":{}}],["grow",{"_index":408,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":379,"title":{},"body":{"index.html":{}}}],["here",{"_index":419,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":426,"title":{},"body":{"index.html":{}}}],["id",{"_index":137,"title":{},"body":{"classes/BaseService.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"controllers/TeamsController.html":{}}}],["identifier",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{}}}],["inherited",{"_index":239,"title":{},"body":{"classes/TeamModel.html":{}}}],["injectable",{"_index":336,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["inspired",{"_index":380,"title":{},"body":{"index.html":{}}}],["installation",{"_index":386,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":388,"title":{},"body":{"index.html":{}}}],["interface",{"_index":209,"title":{"interfaces/IRepository.html":{}},"body":{"interfaces/IRepository.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":211,"title":{},"body":{"interfaces/IRepository.html":{}}}],["internalservererrorexception",{"_index":167,"title":{},"body":{"classes/BaseService.html":{}}}],["internalservererrorexception(err",{"_index":172,"title":{},"body":{"classes/BaseService.html":{}}}],["irepository",{"_index":210,"title":{"interfaces/IRepository.html":{}},"body":{"interfaces/IRepository.html":{},"coverage.html":{}}}],["isstring",{"_index":205,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{}}}],["isstring()@apiproperty",{"_index":201,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{}}}],["item",{"_index":124,"title":{},"body":{"classes/BaseService.html":{}}}],["item).exec",{"_index":193,"title":{},"body":{"classes/BaseService.html":{}}}],["join",{"_index":415,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":423,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"overview.html":{}}}],["license",{"_index":429,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":405,"title":{},"body":{"index.html":{}}}],["load",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["logo",{"_index":200,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{}}}],["matching",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":84,"title":{},"body":{"classes/BaseService.html":{},"interfaces/IRepository.html":{},"controllers/TeamsController.html":{}}}],["miscellaneous",{"_index":365,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":404,"title":{},"body":{"index.html":{}}}],["mode",{"_index":394,"title":{},"body":{"index.html":{}}}],["model",{"_index":83,"title":{},"body":{"classes/BaseService.html":{}}}],["modelname",{"_index":54,"title":{},"body":{"classes/BaseModel.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/TeamsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":168,"title":{},"body":{"classes/BaseService.html":{}}}],["mongoerror",{"_index":158,"title":{},"body":{"classes/BaseService.html":{}}}],["mongoose",{"_index":70,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{}}}],["mongoosemodule.forfeature",{"_index":315,"title":{},"body":{"modules/TeamsModule.html":{}}}],["mongoosemodule.forroot(process.env.mongodb_connection_string",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":418,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":424,"title":{},"body":{"index.html":{}}}],["name",{"_index":109,"title":{},"body":{"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{}}}],["nest",{"_index":382,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":428,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseService.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":208,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"controllers/TeamsController.html":{},"classes/UpdateTeamDto.html":{},"dependencies.html":{}}}],["new",{"_index":171,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["node.js",{"_index":371,"title":{},"body":{"index.html":{}}}],["npm",{"_index":387,"title":{},"body":{"index.html":{}}}],["object",{"_index":111,"title":{},"body":{"classes/BaseService.html":{}}}],["open",{"_index":406,"title":{},"body":{"index.html":{}}}],["optional",{"_index":49,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"interfaces/IRepository.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"overview.html":{}}}],["overview",{"_index":433,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":340,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":280,"title":{},"body":{"controllers/TeamsController.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"classes/BaseService.html":{},"interfaces/IRepository.html":{},"controllers/TeamsController.html":{}}}],["partial",{"_index":126,"title":{},"body":{"classes/BaseService.html":{}}}],["partialtype",{"_index":320,"title":{},"body":{"classes/UpdateTeamDto.html":{}}}],["partialtype(createteamdto",{"_index":321,"title":{},"body":{"classes/UpdateTeamDto.html":{}}}],["patch",{"_index":281,"title":{},"body":{"controllers/TeamsController.html":{}}}],["patch(':id",{"_index":304,"title":{},"body":{"controllers/TeamsController.html":{}}}],["patch(':id')@apiokresponse({description",{"_index":276,"title":{},"body":{"controllers/TeamsController.html":{}}}],["please",{"_index":416,"title":{},"body":{"index.html":{}}}],["post",{"_index":282,"title":{},"body":{"controllers/TeamsController.html":{}}}],["post()@apicreatedresponse({description",{"_index":255,"title":{},"body":{"controllers/TeamsController.html":{}}}],["prefix",{"_index":248,"title":{},"body":{"controllers/TeamsController.html":{}}}],["private",{"_index":102,"title":{},"body":{"classes/BaseService.html":{}}}],["production",{"_index":396,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":370,"title":{},"body":{"index.html":{}}}],["project",{"_index":407,"title":{},"body":{"index.html":{}}}],["promise",{"_index":120,"title":{},"body":{"classes/BaseService.html":{},"controllers/TeamsController.html":{}}}],["prop",{"_index":58,"title":{},"body":{"classes/BaseModel.html":{},"classes/TeamModel.html":{}}}],["prop({required",{"_index":235,"title":{},"body":{"classes/TeamModel.html":{}}}],["properties",{"_index":46,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{}}}],["protected",{"_index":82,"title":{},"body":{"classes/BaseService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"overview.html":{}}}],["public",{"_index":47,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{}}}],["query",{"_index":117,"title":{},"body":{"classes/BaseService.html":{}}}],["queryitem",{"_index":132,"title":{},"body":{"classes/BaseService.html":{},"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":142,"title":{},"body":{"classes/BaseService.html":{},"miscellaneous/typealiases.html":{}}}],["read",{"_index":417,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":385,"title":{},"body":{"index.html":{}}}],["required",{"_index":244,"title":{},"body":{"classes/TeamModel.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"overview.html":{}}}],["result",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":73,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"controllers/TeamsController.html":{}}}],["returnmodeltype",{"_index":106,"title":{},"body":{"classes/BaseService.html":{}}}],["returns",{"_index":116,"title":{},"body":{"classes/BaseService.html":{},"interfaces/IRepository.html":{},"controllers/TeamsController.html":{}}}],["rimraf",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":391,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":375,"title":{},"body":{"index.html":{}}}],["schema",{"_index":53,"title":{},"body":{"classes/BaseModel.html":{},"modules/TeamsModule.html":{}}}],["server",{"_index":376,"title":{},"body":{"index.html":{}}}],["shared/base.model",{"_index":243,"title":{},"body":{"classes/TeamModel.html":{}}}],["side",{"_index":377,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"classes/UpdateTeamDto.html":{},"index.html":{}}}],["specific",{"_index":272,"title":{},"body":{"controllers/TeamsController.html":{}}}],["sponsors",{"_index":410,"title":{},"body":{"index.html":{}}}],["src/.../base.service.ts",{"_index":439,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/interfaces/irepository.ts",{"_index":212,"title":{},"body":{"interfaces/IRepository.html":{},"coverage.html":{}}}],["src/interfaces/irepository.ts:2",{"_index":221,"title":{},"body":{"interfaces/IRepository.html":{}}}],["src/interfaces/irepository.ts:3",{"_index":223,"title":{},"body":{"interfaces/IRepository.html":{}}}],["src/interfaces/irepository.ts:4",{"_index":218,"title":{},"body":{"interfaces/IRepository.html":{}}}],["src/interfaces/irepository.ts:5",{"_index":220,"title":{},"body":{"interfaces/IRepository.html":{}}}],["src/interfaces/irepository.ts:6",{"_index":225,"title":{},"body":{"interfaces/IRepository.html":{}}}],["src/main.ts",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/base.model.ts",{"_index":44,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/shared/base.model.ts:12",{"_index":63,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/shared/base.model.ts:14",{"_index":65,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/shared/base.model.ts:24",{"_index":67,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/shared/base.model.ts:6",{"_index":60,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/shared/base.model.ts:9",{"_index":62,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/shared/base.service.ts",{"_index":81,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/shared/base.service.ts:101",{"_index":154,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:107",{"_index":156,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:115",{"_index":112,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:119",{"_index":119,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:19",{"_index":107,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:25",{"_index":159,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:29",{"_index":127,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:33",{"_index":141,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:37",{"_index":144,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:45",{"_index":150,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:49",{"_index":152,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:57",{"_index":146,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:61",{"_index":148,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:69",{"_index":123,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:77",{"_index":131,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:81",{"_index":134,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:89",{"_index":136,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/base.service.ts:93",{"_index":139,"title":{},"body":{"classes/BaseService.html":{}}}],["src/teams/dto/create",{"_index":197,"title":{},"body":{"classes/CreateTeamDto.html":{},"coverage.html":{}}}],["src/teams/dto/team.dto.ts",{"_index":227,"title":{},"body":{"classes/TeamDto.html":{},"coverage.html":{}}}],["src/teams/dto/team.dto.ts:11",{"_index":231,"title":{},"body":{"classes/TeamDto.html":{}}}],["src/teams/dto/team.dto.ts:15",{"_index":230,"title":{},"body":{"classes/TeamDto.html":{}}}],["src/teams/dto/team.dto.ts:19",{"_index":228,"title":{},"body":{"classes/TeamDto.html":{}}}],["src/teams/dto/team.dto.ts:7",{"_index":229,"title":{},"body":{"classes/TeamDto.html":{}}}],["src/teams/dto/update",{"_index":319,"title":{},"body":{"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["src/teams/team.model.ts",{"_index":233,"title":{},"body":{"classes/TeamModel.html":{},"coverage.html":{}}}],["src/teams/team.model.ts:12",{"_index":236,"title":{},"body":{"classes/TeamModel.html":{}}}],["src/teams/team.model.ts:6",{"_index":238,"title":{},"body":{"classes/TeamModel.html":{}}}],["src/teams/team.model.ts:9",{"_index":237,"title":{},"body":{"classes/TeamModel.html":{}}}],["src/teams/teams.controller.ts",{"_index":247,"title":{},"body":{"controllers/TeamsController.html":{},"coverage.html":{}}}],["src/teams/teams.controller.ts:18",{"_index":269,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:30",{"_index":273,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:39",{"_index":259,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:51",{"_index":278,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:63",{"_index":265,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.module.ts",{"_index":312,"title":{},"body":{"modules/TeamsModule.html":{}}}],["src/teams/teams.service.ts",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":392,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":395,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":397,"title":{},"body":{"index.html":{}}}],["started",{"_index":369,"title":{"index.html":{}},"body":{}}],["starter",{"_index":384,"title":{},"body":{"index.html":{}}}],["statements",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":72,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{}}}],["stay",{"_index":420,"title":{},"body":{"index.html":{}}}],["string",{"_index":56,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{}}}],["successfully",{"_index":258,"title":{},"body":{"controllers/TeamsController.html":{}}}],["support",{"_index":411,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":431,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":122,"title":{},"body":{"classes/BaseService.html":{},"interfaces/IRepository.html":{}}}],["table",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":256,"title":{},"body":{"controllers/TeamsController.html":{}}}],["team.dto",{"_index":286,"title":{},"body":{"controllers/TeamsController.html":{},"classes/UpdateTeamDto.html":{}}}],["team.dto.ts",{"_index":198,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["team.dto.ts:11",{"_index":203,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["team.dto.ts:15",{"_index":202,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["team.dto.ts:7",{"_index":204,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["team.model",{"_index":314,"title":{},"body":{"modules/TeamsModule.html":{}}}],["teamdto",{"_index":226,"title":{"classes/TeamDto.html":{}},"body":{"classes/TeamDto.html":{},"controllers/TeamsController.html":{},"coverage.html":{}}}],["teamdto})@apinotfoundresponse({description",{"_index":263,"title":{},"body":{"controllers/TeamsController.html":{}}}],["teammodel",{"_index":232,"title":{"classes/TeamModel.html":{}},"body":{"classes/TeamModel.html":{},"modules/TeamsModule.html":{},"coverage.html":{}}}],["teammodel.modelname",{"_index":316,"title":{},"body":{"modules/TeamsModule.html":{}}}],["teammodel.schema",{"_index":317,"title":{},"body":{"modules/TeamsModule.html":{}}}],["teams",{"_index":249,"title":{},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{}}}],["teams.controller",{"_index":313,"title":{},"body":{"modules/TeamsModule.html":{}}}],["teams.service",{"_index":284,"title":{},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{}}}],["teams/teams.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["teamscontroller",{"_index":246,"title":{"controllers/TeamsController.html":{}},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"coverage.html":{}}}],["teamservice",{"_index":296,"title":{},"body":{"controllers/TeamsController.html":{}}}],["teamsmodule",{"_index":11,"title":{"modules/TeamsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"modules.html":{},"overview.html":{}}}],["teamsservice",{"_index":283,"title":{},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":400,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":403,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":402,"title":{},"body":{"index.html":{}}}],["tests",{"_index":399,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":409,"title":{},"body":{"index.html":{}}}],["this._count(filter",{"_index":195,"title":{},"body":{"classes/BaseService.html":{}}}],["this._delete(filter).exec",{"_index":188,"title":{},"body":{"classes/BaseService.html":{}}}],["this._deletebyid(id).exec",{"_index":190,"title":{},"body":{"classes/BaseService.html":{}}}],["this._findall(filter).exec",{"_index":178,"title":{},"body":{"classes/BaseService.html":{}}}],["this._findbyid(id).exec",{"_index":185,"title":{},"body":{"classes/BaseService.html":{}}}],["this._findone(filter).exec",{"_index":183,"title":{},"body":{"classes/BaseService.html":{}}}],["this._update(id",{"_index":192,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model",{"_index":169,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model(doc",{"_index":174,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.count(filter",{"_index":194,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.create(item",{"_index":186,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.find(filter",{"_index":175,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.findbyid(id",{"_index":184,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.findbyidanddelete(id",{"_index":189,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.findbyidandupdate(id",{"_index":191,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.findone(filter",{"_index":182,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.findoneanddelete(filter",{"_index":187,"title":{},"body":{"classes/BaseService.html":{}}}],["this.name",{"_index":79,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.teamservice.create(team",{"_index":303,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.teamservice.delete(id",{"_index":309,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.teamservice.getall",{"_index":298,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.teamservice.getbyid(id",{"_index":301,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.teamservice.update(id",{"_index":306,"title":{},"body":{"controllers/TeamsController.html":{}}}],["throw",{"_index":170,"title":{},"body":{"classes/BaseService.html":{}}}],["throwmongoerror",{"_index":103,"title":{},"body":{"classes/BaseService.html":{}}}],["throwmongoerror(err",{"_index":157,"title":{},"body":{"classes/BaseService.html":{}}}],["timestamps",{"_index":75,"title":{},"body":{"classes/BaseModel.html":{}}}],["tojson",{"_index":76,"title":{},"body":{"classes/BaseModel.html":{}}}],["touch",{"_index":421,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/TeamModel.html":{}}}],["try",{"_index":176,"title":{},"body":{"classes/BaseService.html":{}}}],["twitter",{"_index":427,"title":{},"body":{"index.html":{}}}],["type",{"_index":55,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/CreateTeamDto.html":{},"interfaces/IRepository.html":{},"classes/TeamDto.html":{},"classes/TeamModel.html":{},"controllers/TeamsController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":437,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["typegoose/typegoose",{"_index":69,"title":{},"body":{"classes/BaseModel.html":{},"classes/BaseService.html":{},"classes/TeamModel.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/types",{"_index":166,"title":{},"body":{"classes/BaseService.html":{}}}],["typescript",{"_index":383,"title":{},"body":{"index.html":{}}}],["ui",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":268,"title":{},"body":{"controllers/TeamsController.html":{}}}],["unit",{"_index":398,"title":{},"body":{"index.html":{}}}],["update",{"_index":253,"title":{},"body":{"controllers/TeamsController.html":{}}}],["update(@param('id",{"_index":305,"title":{},"body":{"controllers/TeamsController.html":{}}}],["update(id",{"_index":274,"title":{},"body":{"controllers/TeamsController.html":{}}}],["updatebyid",{"_index":217,"title":{},"body":{"interfaces/IRepository.html":{}}}],["updatebyid(id",{"_index":224,"title":{},"body":{"interfaces/IRepository.html":{}}}],["updated",{"_index":277,"title":{},"body":{"controllers/TeamsController.html":{}}}],["updateddate",{"_index":51,"title":{},"body":{"classes/BaseModel.html":{},"classes/TeamModel.html":{}}}],["updateteamdto",{"_index":275,"title":{"classes/UpdateTeamDto.html":{}},"body":{"controllers/TeamsController.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["usenewurlparser",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["useunifiedtopology",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":206,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/TeamDto.html":{},"dependencies.html":{}}}],["value",{"_index":114,"title":{},"body":{"classes/BaseService.html":{}}}],["virtuals",{"_index":78,"title":{},"body":{"classes/BaseModel.html":{}}}],["void",{"_index":161,"title":{},"body":{"classes/BaseService.html":{}}}],["watch",{"_index":393,"title":{},"body":{"index.html":{}}}],["website",{"_index":425,"title":{},"body":{"index.html":{}}}],["yes",{"_index":129,"title":{},"body":{"classes/BaseService.html":{}}}],["you'd",{"_index":414,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTeamsModule\n\nTeamsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTeamsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TeamsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeamsModule } from './teams/teams.module';\nimport configuration from './config/configuration';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [configuration]\n    }),\n    MongooseModule.forRoot(process.env.MONGODB_CONNECTION_STRING, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    }),\n\n    TeamsModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                    Optional\n                                createdDate\n                            \n                            \n                                    Public\n                                    Optional\n                                updatedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/base.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            createdDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/base.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            updatedDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/base.model.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/base.model.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/base.model.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop } from '@typegoose/typegoose';\nimport { Schema } from 'mongoose';\n\nexport abstract class BaseModel {\n  @prop()\n  public _id: string;\n\n  @prop()\n  public createdDate?: Date;\n\n  @prop()\n  public updatedDate?: Date;\n\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true\n      }\n    })\n  }\n\n  static get modelName(): string {\n    return this.name\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/base.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _count\n                            \n                            \n                                    Protected\n                                    Async\n                                _countAsync\n                            \n                            \n                                    Protected\n                                    Async\n                                _create\n                            \n                            \n                                    Protected\n                                _createModel\n                            \n                            \n                                    Protected\n                                _delete\n                            \n                            \n                                    Protected\n                                    Async\n                                _deleteAsync\n                            \n                            \n                                    Protected\n                                _deleteById\n                            \n                            \n                                    Protected\n                                    Async\n                                _deleteByIdAsync\n                            \n                            \n                                    Protected\n                                _findAll\n                            \n                            \n                                    Protected\n                                    Async\n                                _findAllAsync\n                            \n                            \n                                    Protected\n                                _findById\n                            \n                            \n                                    Protected\n                                    Async\n                                _findByIdAsync\n                            \n                            \n                                    Protected\n                                _findOne\n                            \n                            \n                                    Protected\n                                    Async\n                                _findOneAsync\n                            \n                            \n                                    Protected\n                                _update\n                            \n                            \n                                    Protected\n                                    Async\n                                _updateAsync\n                            \n                            \n                                    Private\n                                    Static\n                                throwMongoError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(model: ReturnModelType>)\n                    \n                \n                        \n                            \n                                Defined in src/shared/base.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    ReturnModelType>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/base.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _count(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _create(item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _createModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createModel(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _delete(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _deleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _deleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _deleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _deleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _deleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _deleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _findAll(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _findOne(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _update(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from './base.model';\nimport { DocumentQuery, Query } from 'mongoose';\nimport { DocumentType, ReturnModelType } from '@typegoose/typegoose';\nimport { AnyParamConstructor } from '@typegoose/typegoose/lib/types';\nimport { InternalServerErrorException } from '@nestjs/common';\nimport { MongoError } from 'mongodb';\n\ntype QueryList = DocumentQuery>,\n  DocumentType\n  >;\n\ntype QueryItem = DocumentQuery,\n  DocumentType\n  >;\n\nexport abstract class BaseService {\n  protected model: ReturnModelType>;\n\n  protected constructor(model: ReturnModelType>) {\n    this.model = model;\n  }\n\n  private static throwMongoError(err: MongoError): void {\n    throw new InternalServerErrorException(err, err.errmsg);\n  }\n\n  protected _createModel(doc?: Partial): T {\n    return new this.model(doc);\n  }\n\n  protected _findAll(filter = {}): QueryList {\n    return this.model.find(filter);\n  }\n\n  protected async _findAllAsync(filter = {}): Promise>> {\n    try {\n      return await this._findAll(filter).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  protected _findOne(filter = {}): QueryItem {\n    return this.model.findOne(filter);\n  }\n\n  protected async _findOneAsync(filter = {}): Promise> {\n    try {\n      return await this._findOne(filter).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  protected _findById(id: string): QueryItem {\n    return this.model.findById(id);\n  }\n\n  protected async _findByIdAsync(id: string): Promise> {\n    try {\n      return await this._findById(id).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  protected async _create(item: T): Promise> {\n    try {\n      return await this.model.create(item);\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  protected _delete(filter = {}): QueryItem {\n    return this.model.findOneAndDelete(filter);\n  }\n\n  protected async _deleteAsync(filter = {}): Promise> {\n    try {\n      return await this._delete(filter).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  protected _deleteById(id: string): QueryItem {\n    return this.model.findByIdAndDelete(id);\n  }\n\n  protected async _deleteByIdAsync(id: string): Promise> {\n    try {\n      return await this._deleteById(id).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  protected _update(id: string, item: Partial): QueryItem {\n    return this.model.findByIdAndUpdate(id, item, {\n      new: true,\n    });\n  }\n\n  protected async _updateAsync(id: string, item: Partial): Promise> {\n    try {\n      return await this._update(id, item).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  protected _count(filter = {}): Query {\n    return this.model.count(filter);\n  }\n\n  protected async _countAsync(filter = {}): Promise {\n    try {\n      return await this._count(filter);\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeamDto.html":{"url":"classes/CreateTeamDto.html","title":"class - CreateTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/dto/create-team.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                logo\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/dto/create-team.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/dto/create-team.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/dto/create-team.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateTeamDto {\n  @IsString()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @ApiProperty()\n  public logo: string;\n\n  @IsString()\n  @ApiProperty()\n  public country: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRepository.html":{"url":"interfaces/IRepository.html","title":"interface - IRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/IRepository.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    deleteById\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findById\n                                \n                                \n                                    updateById\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/IRepository.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/IRepository.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/IRepository.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/IRepository.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \nupdateById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/IRepository.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IRepository {\n  findAll(): T[];\n  findById(id: string): T;\n  create(): T;\n  deleteById(id: string): T;\n  updateById(id: string): T;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamDto.html":{"url":"classes/TeamDto.html","title":"class - TeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/dto/team.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                logo\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/dto/team.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/dto/team.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/dto/team.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/dto/team.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TeamDto {\n  @IsString()\n  @ApiProperty()\n  public id: string;\n\n  @IsString()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @ApiProperty()\n  public logo: string;\n\n  @IsString()\n  @ApiProperty()\n  public country: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamModel.html":{"url":"classes/TeamModel.html","title":"class - TeamModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/team.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                logo\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                    Optional\n                                createdDate\n                            \n                            \n                                    Public\n                                    Optional\n                                updatedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/team.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/team.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/teams/team.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            createdDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            updatedDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop } from '@typegoose/typegoose';\nimport { BaseModel } from '../shared/base.model';\n\nexport class TeamModel extends BaseModel {\n  @prop({ required: true })\n  public name: string;\n\n  @prop({ required: true })\n  public logo: string;\n\n  @prop({ required: true })\n  public country: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamsController.html":{"url":"controllers/TeamsController.html","title":"controller - TeamsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/teams.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teams\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                getAll\n                            \n                            \n                                    Public\n                                    Async\n                                getById\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(team: CreateTeamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'Team created successfully', type: TeamDto})\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                CreateTeamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({description: 'Return deleted team', type: TeamDto})@ApiNotFoundResponse({description: 'Team does not exist'})\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Return all teams from database', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Return specific team', type: TeamDto})@ApiNotFoundResponse({description: 'Team does not exist'})\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, team: UpdateTeamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({description: 'Return updated team', type: TeamDto})@ApiNotFoundResponse({description: 'Team does not exist'})\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    team\n                                    \n                                                UpdateTeamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common';\nimport { TeamsService } from './teams.service';\nimport { CreateTeamDto } from './dto/create-team.dto';\nimport { TeamDto } from './dto/team.dto';\nimport { ApiCreatedResponse, ApiNotFoundResponse, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { UpdateTeamDto } from './dto/update-team.dto';\n\n@ApiTags('Teams')\n@Controller('teams')\nexport class TeamsController {\n  constructor(private teamService: TeamsService) { }\n\n  @Get()\n  @ApiOkResponse({\n    description: 'Return all teams from database',\n    type: [TeamDto]\n  })\n  public async getAll(): Promise {\n    return this.teamService.getAll();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({\n    description: 'Return specific team',\n    type: TeamDto\n  })\n  @ApiNotFoundResponse({\n    description: 'Team does not exist'\n  })\n  public async getById(@Param('id') id: string): Promise {\n    return this.teamService.getById(id);\n  }\n\n  @Post()\n  @ApiCreatedResponse({\n    description: 'Team created successfully',\n    type: TeamDto\n  })\n  public async create(@Body() team: CreateTeamDto): Promise {\n    return this.teamService.create(team);\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({\n    description: 'Return updated team',\n    type: TeamDto\n  })\n  @ApiNotFoundResponse({\n    description: 'Team does not exist'\n  })\n  public async update(@Param('id') id: string, @Body() team: UpdateTeamDto): Promise {\n    return this.teamService.update(id, team)\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({\n    description: 'Return deleted team',\n    type: TeamDto\n  })\n  @ApiNotFoundResponse({\n    description: 'Team does not exist'\n  })\n  public async delete(@Param('id') id: string): Promise {\n    return this.teamService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsModule.html":{"url":"modules/TeamsModule.html","title":"module - TeamsModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamsModule\n\n\n\ncluster_TeamsModule_providers\n\n\n\n\nTeamsService\n\nTeamsService\n\n\n\nTeamsModule\n\nTeamsModule\n\nTeamsModule -->\n\nTeamsService->TeamsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teams/teams.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeamsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeamsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeamsController } from './teams.controller';\nimport { TeamsService } from './teams.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TeamModel } from './team.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: TeamModel.modelName, schema: TeamModel.schema, collection: 'teams' }\n    ])\n  ],\n  controllers: [TeamsController],\n  providers: [TeamsService]\n})\nexport class TeamsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeamDto.html":{"url":"classes/UpdateTeamDto.html","title":"class - UpdateTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/dto/update-team.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTeamDto } from './create-team.dto';\n\nexport class UpdateTeamDto extends PartialType(CreateTeamDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/interfaces/IRepository.ts\n            \n            interface\n            IRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/base.model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/teams/dto/create-team.dto.ts\n            \n            class\n            CreateTeamDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/teams/dto/team.dto.ts\n            \n            class\n            TeamDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/teams/dto/update-team.dto.ts\n            \n            class\n            UpdateTeamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teams/team.model.ts\n            \n            class\n            TeamModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/teams/teams.controller.ts\n            \n            controller\n            TeamsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/teams/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/28)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^6.4.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.1\n        \n            @typegoose/typegoose : ^6.4.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.1\n        \n            mongoose : ^5.9.7\n        \n            nestjs-typegoose : ^7.1.14\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TeamsModule\n\n\n\ncluster_TeamsModule_providers\n\n\n\n\nTeamsModule\n\nTeamsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTeamsModule->AppModule\n\n\n\n\n\nTeamsService\n\nTeamsService\n\nTeamsModule -->\n\nTeamsService->TeamsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            QueryItem   (src/.../base.service.ts)\n                        \n                        \n                            QueryList   (src/.../base.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/base.service.ts\n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
